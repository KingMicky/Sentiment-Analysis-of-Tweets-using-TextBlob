[
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "seaborn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "seaborn",
        "description": "seaborn",
        "detail": "seaborn",
        "documentation": {}
    },
    {
        "label": "TextBlob",
        "importPath": "textblob",
        "description": "textblob",
        "isExtraImport": true,
        "detail": "textblob",
        "documentation": {}
    },
    {
        "label": "read_data",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def read_data(filepath):\n    data = pd.read_csv(filepath)\n    data['text'] = data['text'].astype(str)\n    return data\n# Perform sentiment analysis on tweets\ndef analyze_sentiment(data):\n    data['polarity'] = data['text'].apply(lambda x: TextBlob(x).sentiment.polarity)\n    data['subjectivity'] = data['text'].apply(lambda x: TextBlob(x).sentiment.subjectivity)\n    data['sentiment'] = data['polarity'].apply(lambda x: 'positive' if x > 0 else ('negative' if x < 0 else 'neutral'))\n    return data",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "analyze_sentiment",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def analyze_sentiment(data):\n    data['polarity'] = data['text'].apply(lambda x: TextBlob(x).sentiment.polarity)\n    data['subjectivity'] = data['text'].apply(lambda x: TextBlob(x).sentiment.subjectivity)\n    data['sentiment'] = data['polarity'].apply(lambda x: 'positive' if x > 0 else ('negative' if x < 0 else 'neutral'))\n    return data\n# Visualize sentiment analysis results\ndef visualize_sentiment(data):\n    sns.histplot(data['polarity'], kde=False, color='#539caf')\n    plt.xlabel('Sentiment Polarity')\n    plt.ylabel('Count')",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "visualize_sentiment",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def visualize_sentiment(data):\n    sns.histplot(data['polarity'], kde=False, color='#539caf')\n    plt.xlabel('Sentiment Polarity')\n    plt.ylabel('Count')\n    plt.title('Sentiment Analysis Histogram')\n    plt.axvline(0, color='gray', linestyle='--')\n    plt.show()\n# Output sentiment analysis results to markdown table\ndef output_results(data):\n    print(\"| Text | Polarity | Subjectivity | Sentiment |\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "output_results",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def output_results(data):\n    print(\"| Text | Polarity | Subjectivity | Sentiment |\")\n    print(\"| --- | --- | --- | --- |\")\n    for index, row in data.iterrows():\n        print(f\"| {row['text']} | {row['polarity']} | {row['subjectivity']} | {row['sentiment']} |\")\n# Main function\ndef main(filepath):\n    data = read_data(filepath)\n    data = analyze_sentiment(data)\n    visualize_sentiment(data)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main(filepath):\n    data = read_data(filepath)\n    data = analyze_sentiment(data)\n    visualize_sentiment(data)\n    output_results(data)\nif __name__ == \"__main__\":\n    import sys\n    if len(sys.argv) != 2:\n        print(\"Usage: python sentiment_analysis.py tweets.csv\")\n        sys.exit(1)",
        "detail": "main",
        "documentation": {}
    }
]